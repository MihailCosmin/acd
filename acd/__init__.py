import importlib
__all__ = []
def __getattr__(name):
    modules = {
        'get_ocr_pdf_content': 'ocr_pdf',
        'ocr_pdf': 'ocr_pdf',
        'XmlSchemaValidator': 'xml_validation',
        'Punctuation': 'xml_validation',
        'add_iplnom_to_stp': 'stp',
        'add_iplnom_to_smg': 'smg',
        'is_fullpage_illu': 'estimation',
        'estimate_illustration': 'estimation',
        'prepare_estimation': 'estimation',
        'pdf_page_count': 'pdf',
        'get_pdf_content': 'pdf',
        'get_pdf_metadata': 'pdf',
        'merge_pdfs': 'pdf',
        'get_textfile_content': 'txt',
        'validate_word': 'txt',
        'word_frequency': 'txt',
        'add_leading': 'txt',
        'find_characters': 'txt',
        'string_similarity': 'txt',
        'copy_pdf_column': 'extract_rows',
        'extract_rows_from_page': 'extract_rows',
        'ste_dict_rows': 'extract_rows',
        'pdf_to_dictionary': 'extract_rows',
        'pdf_page_to_img': 'extract_rows',
        'list_files3': 'filelist',
        'list_files2': 'filelist',
        'list_files': 'filelist',
        'get_extensions': 'filelist',
        'read_word_footers': 'docx_',
        'get_regex_string': 'docx_',
        'replace_copyright': 'docx_',
        'get_template_version': 'docx_',
        'docx_footer_replace': 'docx_',
        'docx_header_replace': 'docx_',
        'docx_content_replace': 'docx_',
        'replace_media': 'docx_',
        'word2pdf': 'docx_',
        'get_table_column_widths': 'docx_',
        'adjust_column_widths': 'docx_',
        'get_footer_type': 'docx_',
        'update_footer_table_widths': 'docx_',
        'to_256': 'graphics',
        'compress_img': 'graphics',
        'resize_img': 'graphics',
        'negative': 'graphics',
        'blueprint': 'graphics',
        'crop_image': 'graphics',
        'get_average_color': 'graphics',
        'glb2dracoglb': 'glb2dracoglb',
        'add_filename_version': 'filename_version',
        'update_filename_version': 'filename_version',
        'delete_filename_version': 'filename_version',
        'increase_filename_version': 'filename_version',
        'batch': 'batcher',
        'rename_illustrations': 'batcher',
        'UiLoader': 'utils',
        'load_ui': 'utils',
        'WorkerSignals': 'multi',
        'Worker': 'multi',
        'check_line_widths': 'svg_checks',
        '__check_line_widths': 'svg_checks',
        'batch_check_line_widths': 'svg_checks',
        'check_icn': 'svg_checks',
        'check_icns': 'svg_checks',
        'check_text_format': 'svg_checks',
        'batch_check_text_format': 'svg_checks',
        'check_illu_text': 'svg_checks',
        'illu_date_check': 'illustration_checks',
        'check_cgm_details': 'illustration_checks',
        'check_tif_details': 'illustration_checks',
        'get_chrome_driver_version': 'vendor_list',
        'update_chrome_driver': 'vendor_list',
        'VendorList': 'vendor_list',
        'UnrecognizedUnit': 'unit_table',
        'UnitTable': 'unit_table',
        'clean_xml_tags': 'repair_steps',
        'RepairSteps': 'repair_steps',
        'NoExcelSet': 'consTableValidator',
        'NoOriginalTableFound': 'consTableValidator',
        'DictError': 'consTableValidator',
        'ConsumablesList': 'consTableValidator',
        'NoXmlSet': 'ataispec2200',
        'ConsumablesValidator': 'ataispec2200',
        'TorqueValuesValidator': 'ataispec2200',
        'cons_and_teds_checker': 'ataispec2200',
        'ipl_to_dict': 'ataispec2200',
        '_ipl_to_dict_excel': 'ataispec2200',
        'pgblk_9000_ted_checker': 'ataispec2200',
        'AtaNumbering': 'ataispec2200',
        'download_excel': 'excel_',
        'get_excel_sheet_names': 'excel_',
        'colum_number_to_letter': 'excel_',
        'format_excel': 'excel_',
        'unarchive_file': 'archive',
        'zip_word_folder': 'archive',
        'zip_excel_folder': 'archive',
        'zip_folder': 'archive',
        'zipdir': 'archive',
        'seven_unzip': 'archive',
        'get_manual_series': 'make_library',
        'make_library': 'make_library',
        'cgm2svgclear': 'cgm2clearcgm',
        'cgm2svg': 'cgm2svg',
        'process_file': 'automonkey_solution',
        'calculate_version': 'automonkey_solution',
        'calculate_image_similarity2': 'automonkey_solution',
        'BrexNotFound': 'brex_checker',
        'NoBrexDefined': 'brex_checker',
        'clean_xpath': 'brex_checker',
        'BrexChecker': 'brex_checker',
        'get_font_types': 'clearcgm2svg',
        'linePrepend': 'clearcgm2svg',
        'prettyPrint': 'clearcgm2svg',
        'getContent': 'clearcgm2svg',
        'oneDigit': 'clearcgm2svg',
        'twoDigits': 'clearcgm2svg',
        'threeDigits': 'clearcgm2svg',
        'fourDigits': 'clearcgm2svg',
        'strokeWidth': 'clearcgm2svg',
        'stroke': 'clearcgm2svg',
        'fill': 'clearcgm2svg',
        'rbg2hex': 'clearcgm2svg',
        'svgCircle': 'clearcgm2svg',
        'calculate_points': 'clearcgm2svg',
        'svgPolyline': 'clearcgm2svg',
        'svgText': 'clearcgm2svg',
        'preprocess_svg': 'clearcgm2svg',
        'clearCGM2SVG': 'clearcgm2svg',
        'calculate_image_similarity': 'compare_raster',
        'copy_files': 'copying',
        'clean_word': 'data_extraction',
        'get_file_size': 'file_info',
        'clean_path': 'filepath',
        'FCChecker': 'fits_and_clearences_checker',
        'illustrationChecker': 'illustrations_checker',
        'baselineReportFilter': 'illustrations_checker',
        'pdf2raster': 'pdf2raster',
        'IPLChecker': 'procedure_checker',
        'convert_image_to_pdf': 'raster2pdf',
        'raster2pdf': 'raster2pdf',
        'RefChecker': 'reference_checker',
        'CsnChecker': 'reference_checker',
        'GraphicRefChecker': 'reference_checker',
        'get_s1000d_version': 's1000d',
        'get_references': 's1000d',
        'get_s1000d_refs': 's1000d',
        'get_4plus_refs': 's1000d',
        'get_2and3_refs': 's1000d',
        'get_brex_ref': 's1000d',
        'ref_dict_to_str': 's1000d',
        'find_document_by_reference': 's1000d',
        'get_dm_codes_from_dir': 's1000d',
        'get_dm_code_from_filename': 's1000d',
        'get_dm_code_from_xml': 's1000d',
        'validate_references': 's1000d',
        'ref_dict_to_dm_code_dict': 's1000d',
        'ref_dict_to_xml': 's1000d',
        'get_ddn': 's1000d',
        'validate_ddn': 's1000d',
        'increase_issue_number': 's1000d',
        'set_inwork': 's1000d',
        'read_dmodule': 's1000d',
        'read_procedure': 's1000d',
        'read_description': 's1000d',
        'include_search_bar': 'search_bar',
        '_filter_widgets': 'search_bar',
        'get_svg_data': 'svg_data',
        'svg2jpg': 'svg2jpg',
        'svg2pdf': 'svg2pdf',
        'pdf_date_to_format': 'time',
        'delete_first_line': 'xml_processing',
        'linearize_xml': 'xml_processing',
        'get_schema_from_xml': 'xml_processing',
        'get_xml_attribute': 'xml_processing',
        'set_xml_attribute': 'xml_processing',
        'get_xml_tag_content': 'xml_processing',
        'set_xml_tag_content': 'xml_processing',
        'replace_special_characters': 'xml_processing',
    }
    if name in modules:
        module = importlib.import_module(f'.{modules[name]}', __package__)
        return getattr(module, name)
    raise AttributeError(f'module {__name__} has no attribute {name}')
